import re

def assess_password_strength(password):
    # Password strength criteria
    length_criteria = len(password) >= 8
    upper_criteria = re.search(r'[A-Z]', password) is not None
    lower_criteria = re.search(r'[a-z]', password) is not None
    number_criteria = re.search(r'\d', password) is not None
    special_criteria = re.search(r'[@$!%*?&#]', password) is not None
    
    # Calculate score
    score = sum([length_criteria, upper_criteria, lower_criteria, number_criteria, special_criteria])
    
    # Feedback based on score
    if score == 5:
        return "Very Strong", "Your password meets all criteria. Well done!"
    elif score == 4:
        return "Strong", "Your password is strong, but consider adding more special characters or numbers."
    elif score == 3:
        return "Moderate", "Your password is okay, but consider adding more uppercase letters, numbers, or special characters."
    elif score == 2:
        return "Weak", "Your password is weak. Consider using a mix of uppercase, lowercase letters, numbers, and special characters."
    else:
        return "Very Weak", "Your password is too weak. Make sure itâ€™s at least 8 characters long and includes a mix of letters, numbers, and special characters."

# Test the function
password = input("Enter a password to assess: ")
strength, feedback = assess_password_strength(password)
print(f"Password strength: {strength}")
print(f"Feedback: {feedback}")
